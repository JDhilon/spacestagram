{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Picture.jsx","components/PictureList.jsx","components/App.jsx","index.js"],"names":["Header","Grid","container","spacing","item","xs","fontSize","sx","color","Avatar","textAlign","Footer","Picture","props","useState","isLiked","setLiked","handleLike","event","preventDefault","md","lg","xl","mt","ImageListItem","src","url","alt","title","ImageListItemBar","actionIcon","IconButton","onClick","subtitle","copyright","date","actionPosition","id","PictureList","alignItems","justifyContent","picData","map","index","picture","description","explanation","createEntry","App","data","setData","loading","setLoading","React","setDate","loadPictures","a","apiUrl","isDate","isBefore","Date","now","start","format","fetch","response","json","apiData","fetchData","useEffect","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","label","value","onChange","newValue","renderInput","params","TextField","LoadingButton","variant","bgcolor","length","fullWidth","mb","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8471d4c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\r\nimport Grid from '@mui/material/Grid'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n    <Grid container spacing={2}>\r\n        <Grid item xs={2}>\r\n            <PhotoCameraIcon fontSize=\"large\" sx={{color: \"#FF4C29\"}}/>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n            <h1>Spacestagram</h1>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n            <Avatar>\r\n                <PersonIcon fontSize=\"large\" sx={{textAlign: \"right\"}}/>\r\n            </Avatar>\r\n        </Grid>\r\n    </Grid>\r\n\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  const year = new Date().getFullYear();\r\n  return (\r\n    <footer>\r\n      <p>Copyright â“’ {year}</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\r\nimport Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\n\r\nfunction Picture(props) {\r\n    const [isLiked, setLiked] = useState(false);\r\n\r\n    function handleLike(event){\r\n        setLiked(!isLiked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Picture components resize themselves responsively in a grid to be viewed comfortably on desktop, tablet, or mobile\r\n    return (\r\n    <Grid item xs={12} md={6} lg={4} xl={3} sx={{mt: 1}}>\r\n        <ImageListItem key={props.id}>\r\n            <img\r\n            src={props.url}\r\n            alt={props.title}\r\n            />\r\n            <ImageListItemBar\r\n                title={props.title}\r\n                actionIcon={\r\n                    isLiked ? \r\n                        <IconButton sx={{ color: 'red' }} onClick={handleLike}> <FavoriteIcon /> </IconButton> \r\n                        : \r\n                        <IconButton sx={{ color: 'white' }} onClick={handleLike}> <FavoriteBorderIcon /> </IconButton>\r\n                }\r\n                subtitle={props.copyright + '\\t' + props.date}\r\n                actionPosition=\"right\"\r\n            />\r\n        </ImageListItem>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Picture;","import React, { useState } from \"react\";\r\nimport Picture from \"./Picture\";\r\nimport ImageList from '@mui/material/ImageList';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\n// Create Picture component based on data from API\r\nfunction createEntry(picture, index) {\r\n    return <Picture \r\n        key={index}\r\n        title={picture.title}\r\n        url={picture.url}\r\n        description={picture.explanation}\r\n        copyright={picture.copyright}\r\n        date={picture.date}\r\n    />;\r\n}\r\n\r\nfunction PictureList(props) {\r\n\r\n    return (\r\n        <Grid container alignItems=\"center\" justifyContent=\"left\" spacing={{ xs: 2, md: 3 }}>\r\n            {props.picData.map((item, index) => {\r\n                return createEntry(item, index);\r\n            })}\r\n      </Grid>\r\n  );\r\n}\r\n\r\nexport default PictureList;","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport PictureList from \"./PictureList\";\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport Grid from '@mui/material/Grid';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Button from '@mui/material/Button';\r\nimport {format, isDate, isBefore} from 'date-fns';\r\nimport env from 'react-dotenv';\r\n\r\n\r\nfunction App() {    \r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n    const [date, setDate] = React.useState(null);\r\n\r\n    // Loads an entire new set of pictures. Defaults to 10 random pictures if no date is specified, else it loads all pictures from the specified date\r\n    function loadPictures() {\r\n        setLoading(true);\r\n\r\n        async function fetchData(){\r\n            // TODO: Change to higher count and use dotenv\r\n            var apiUrl = \"https://api.nasa.gov/planetary/apod?count=10&api_key=\" + \"hJpJCLFX4B86WpbI9KkchLScLzaYnayPeiZ2qvnp\";\r\n            if(isDate(date) && isBefore(date, Date.now())){\r\n                let start = format(date, 'yyyy-MM-dd')\r\n                apiUrl = \"https://api.nasa.gov/planetary/apod?api_key=hJpJCLFX4B86WpbI9KkchLScLzaYnayPeiZ2qvnp&start_date=\" + start;\r\n            }\r\n            const response = await fetch(apiUrl);\r\n            const apiData = await response.json();\r\n            setData(apiData);\r\n            setLoading(false);\r\n        };\r\n\r\n        fetchData();\r\n        return;\r\n    }\r\n\r\n    // Loads 5 more images to current set\r\n    function loadMore() {\r\n        setLoading(true);\r\n\r\n        async function fetchData(){\r\n            // TODO: Change to higher count and use dotenv\r\n            var apiUrl = \"https://api.nasa.gov/planetary/apod?api_key=hJpJCLFX4B86WpbI9KkchLScLzaYnayPeiZ2qvnp&count=10\"\r\n            const response = await fetch(apiUrl);\r\n            const apiData = await response.json();\r\n            setData(data => [...data, ...apiData]);\r\n            setLoading(false);\r\n        };\r\n\r\n        fetchData();\r\n        return;\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadPictures();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Grid container alignItems='center' justifyContent='center' spacing={3} sx={{mt: 1}}>\r\n                <Grid item>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <DatePicker\r\n                            label=\"Pictures from...\"\r\n                            value={date}\r\n                            onChange={(newValue) => {\r\n                                setDate(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                        />\r\n                    </LocalizationProvider>\r\n                </Grid>\r\n                <Grid item>\r\n                    <LoadingButton onClick={loadPictures} loading={loading} variant=\"contained\" sx={{bgcolor: \"#2C394B\", color: 'white'}}>\r\n                        Go\r\n                    </LoadingButton>\r\n                </Grid>\r\n            </Grid>\r\n            <PictureList picData={data} />\r\n            {(data.length !== 0) ? <LoadingButton onClick={loadMore} loading={loading} fullWidth={true} variant=\"text\" sx={{mb: 1, mt: 3, color: \"#FF4C29\"}}>View More</LoadingButton> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}